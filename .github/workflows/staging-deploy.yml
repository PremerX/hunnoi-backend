name: Deploy Hunnoi Backend on Production

on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Backup Old Latest Tag
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}"
          if docker pull $IMAGE_NAME:latest; then
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:old
            docker push $IMAGE_NAME:old
          else
            echo "No latest image to backup."
          fi

      - name: Build Docker Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}"
          docker build -t $IMAGE_NAME:latest .

      - name: Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}"
          docker push $IMAGE_NAME:latest

      - name: Transfer Docker Compose Production to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_PRIVATE_KEY }}
          port: 22
          source: compose.yml
          target: ${{ secrets.DROPLET_PATH }}
          timeout: 120s

  deploy:
    name: Deploy to Droplet
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to droplet server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_PRIVATE_KEY }}
          port: 22
          script: |
            cd hunnoi-backend/
            npx dotenv-vault@latest pull staging
            docker compose -f ./compose.yml pull
            docker compose -f ./compose.yml up -d
            docker image prune -f
